# -*- coding: utf-8 -*-
"""
Created on Fri Aug 28 12:32:18 2020

@author: Osiris
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression 
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

#importing the dataset
dataset = pd.read_csv('50_Startups.csv')
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
print(x)

#encoding catergorical data
ct = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [3])], remainder = 'passthrough')
x = np.array(ct.fit_transform(x))
print(x)

#splitting dataset into the training and testing set
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, 
                                                    random_state = 0)
print(x_train)
print(x_test)
print(y_train)
print(y_test)

#training the simple linear regression model on the training set
regressor = LinearRegression() #fit we always use in the training models (linear regression class)
regressor.fit(x_train, y_train)

#prediciting the test set results then print out horizontal
y_predict = regressor.predict(x_test)
np.printoptions(precision = 2)
print(np.concatenate((y_predict.reshape(len(y_predict), 1), y_test.reshape(len(y_test), 1)), 1))
